generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  password  String
  name      String?
  posts     Post[]
  likes     Like[]
  bookmarks Bookmark[]
  desc      String?
  activated Boolean    @default(false)
  comments  Comment[]
}

model Post {
  id         String    @id @default(cuid())
  createdAt  DateTime  @default(now())
  title      String
  content    String?
  exerpt     String?
  authorId   String
  author     User      @relation(fields: [authorId], references: [id])
  categoryId String
  category   Category  @relation(fields: [categoryId], references: [id])
  keywords   Keyword[]
  likes      Like[]
  comments    Comment[]
  featured   Boolean   @default(false)
  featuredOn DateTime?
  published  Boolean   @default(false)
  image      String    @default("")
  words      Int       @default(0)
}

model Category {
  id    String @id @default(cuid())
  name  String
  posts Post[]
}

model Like {
  id      String @id @default(cuid())
  likerId String
  liker   User   @relation(fields: [likerId], references: [id])
  postId  String
  post    Post   @relation(fields: [postId], references: [id])
}

model Keyword {
  id    String @id @default(cuid())
  name  String
  posts Post[]
}

model Bookmark {
  id           String   @id @default(cuid())
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  postId       String
  bookmarkedAt DateTime @default(now())
}

model Comment {
  id      String @id @default(cuid())
  commenterId String
  commenter   User   @relation(fields: [commenterId], references: [id])
  postId  String
  post    Post   @relation(fields: [postId], references: [id])
  content String  @default("")

  Children  Comment[] @relation("Comment_Children")
  parent    Comment?  @relation("Comment_Children", fields: [parent_id], references: [id])
  parent_id String?

}